setup_heroku: &setup_heroku
  run:
    name: Setup Heroku
    command: |
        chmod +x .circleci/setup-heroku.sh
        .circleci/setup-heroku.sh
deploy_defaults: &deploy_defaults
  steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - *setup_heroku
    - run:
        name: Build Docker image
        command: docker build -t hy-forum-$SERVICE services/$SERVICE
    - run:
        name: Publish Docker image to Heroku
        command: |
            echo "$HEROKU_API_KEY" | docker login -username=$HEROKU_USERNAME --password-stdin registry.heroku.com
            docker tag hy-forum-$SERVICE registry.heroku.com/hy-forum-$SERVICE/web
            docker push registry.heroku.com/hy-forum-$SERVICE/web
    - run:
        name: Deploy to Heroku
        command: |
          heroku container:release web --app hy-forum-$SERVICE

version: 2.1
executors:
  frontend-publisher:
    environment:
      SERVICE: frontend
    docker:
      - image: olavim/ci-sqitch-heroku:latest
  backend-publisher:
    environment:
      SERVICE: backend
    docker:
      - image: olavim/ci-sqitch-heroku:latest
  database-publisher:
    docker:
      - image: olavim/ci-sqitch-heroku:latest

jobs:
  deploy-frontend:
    executor: frontend-publisher
    <<: *deploy_defaults
  deploy-backend:
    executor: backend-publisher
    <<: *deploy_defaults
  deploy-database:
    executor: database-publisher
    steps:
      - checkout
      - *setup_heroku
      - run:
          name: Deploy database
          command: |
            cd services/backend/sqitch
            sqitch target alter remote --uri db:$(heroku config:get DATABASE_URL -a hy-forum-backend)
            sqitch deploy remote

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - deploy-database:
          filters:
            branches:
              only: osa2/database
      - deploy-frontend:
          requires:
            - deploy-database
          filters:
            branches:
              only: master
      - deploy-backend:
          requires:
            - deploy-database
          filters:
            branches:
              only: master
